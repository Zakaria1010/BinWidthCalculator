name: Build, Test, Dockerize, and Deploy to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY_NAME: binwidthcalculatoracr
  IMAGE_NAME: bin-width-calculator
  RESOURCE_GROUP: binwidthcalculator-rg
  CONTAINER_NAME: binwidthcalculator-app
  LOCATION: eastus

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
          cache: true

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Run unit and integration tests
        run: dotnet test --configuration Release --no-build --verbosity normal

      - name: Upload build output for reuse
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: BinWidthCalculator.API/bin/Release/net7.0/publish/

  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download published app
        uses: actions/download-artifact@v4
        with:
          name: published-app
          path: ./publish

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          build-args: |
            PUBLISH_DIR=./publish
          tags: |
            ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:buildcache,mode=max

      - name: Print image digest
        run: | 
          echo "Docker image digest:" echo ${{ steps.docker_build.outputs.digest }}
          
  deploy-to-azure:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Instances
        uses: azure/aci-deploy@v1
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          dns-name-label: binwidthcalculator-${{ github.sha }}
          image: ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          registry-login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          registry-username: ${{ secrets.ACR_USERNAME }}
          registry-password: ${{ secrets.ACR_PASSWORD }}
          name: ${{ env.CONTAINER_NAME }}
          location: ${{ env.LOCATION }}
          ports: '80'
          cpu: 1
          memory: 1
          os-type: Linux

      - name: Check health endpoint
        run: |
          URL="http://binwidthcalculator-${{ github.sha }}.${{ env.LOCATION }}.azurecontainer.io/health"
          echo "Checking $URL"
          for i in {1..20}; do
            if curl -sf $URL; then
              echo "✅ Container is healthy"
              exit 0
            fi
            echo "Waiting for container..."
            sleep 10
          done
          echo "❌ Container not healthy in time"
          exit 1
