name: Build, Test and Deploy to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY_NAME: 'binwidthcalculatoracr'
  IMAGE_NAME: 'bin-width-calculator'
  RESOURCE_GROUP: 'binwidthcalculator-rg'
  CONTAINER_NAME: 'binwidthcalculator-app'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal

    - name: Run integration tests
      run: dotnet test BinWidthCalculator.Tests/BinWidthCalculator.Tests.csproj --configuration Release --no-build

  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

  deploy-to-azure:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Deploy to Azure Container Instances
      uses: azure/aci-deploy@v1
      with:
        resource-group: ${{ env.RESOURCE_GROUP }}
        dns-name-label: binwidthcalculator-${{ github.sha }}
        image: ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
        registry-login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        registry-username: ${{ secrets.ACR_USERNAME }}
        registry-password: ${{ secrets.ACR_PASSWORD }}
        name: ${{ env.CONTAINER_NAME }}
        location: 'eastus'
        ports: '80'
        cpu: 1
        memory: 1
        os-type: Linux

    - name: Get container URL
      id: get-url
      run: |
        echo "container-url=https://binwidthcalculator-${{ github.sha }}.eastus.azurecontainer.io" >> $GITHUB_OUTPUT

    - name: Wait for container to be ready
      run: |
        sleep 30
        curl -f https://binwidthcalculator-${{ github.sha }}.eastus.azurecontainer.io/health || exit 1

    - name: Run API tests against deployed instance
      run: |
        # Test the deployed API
        curl -X POST "https://binwidthcalculator-${{ github.sha }}.eastus.azurecontainer.io/api/orders" \
          -H "Content-Type: application/json" \
          -d '{"items": [{"productType": 1, "quantity": 1}]}' \
          --fail